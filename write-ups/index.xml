<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Write-ups on ~Zero</title>
    <link>https://0ozero0.github.io/write-ups/</link>
    <description>Recent content in Write-ups on ~Zero</description>
    <image>
      <url>https://0ozero0.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://0ozero0.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 21 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://0ozero0.github.io/write-ups/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>black-Hat-MEA-CTF | ALL Web challenges </title>
      <link>https://0ozero0.github.io/write-ups/blackhatmea/web-challenges/writeup/</link>
      <pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://0ozero0.github.io/write-ups/blackhatmea/web-challenges/writeup/</guid>
      <description>Solving black-Hat-MEA-CTF All Web challenges.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://0ozero0.github.io/write-ups/nahamcon-ctf-2023/webchallenges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0ozero0.github.io/write-ups/nahamcon-ctf-2023/webchallenges/</guid>
      <description>Museum Challenge When accessing the web app, the following page is displayed While attempting to view an image using the following URL format: http://challenge.nahamcon.com:31368/browse?artifact=angwy.jpg, I noticed that the application calls the image through the ?artifact parameter. Exploiting this behavior, I attempted a Local File Inclusion (LFI) attack by modifying the URL to access sensitive files such as /.etc/passwd. However, I encountered an obstacle as I couldn&amp;rsquo;t directly read the flag. As a result, I started investigating the location of the application by exploring /proc/self/cmdline.</description>
    </item>
    
  </channel>
</rss>
